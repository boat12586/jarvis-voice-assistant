apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvis-config
  namespace: jarvis-v2
data:
  # Application Configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"
  
  # Service URLs
  REDIS_URL: "redis://jarvis-redis:6379"
  MONGODB_URL: "mongodb://jarvis-mongodb:27017/jarvis_v2"
  
  # External APIs
  OPENWEATHER_API_KEY: "your_openweather_api_key"
  
  # Audio Processing
  AUDIO_SAMPLE_RATE: "16000"
  AUDIO_CHUNK_SIZE: "1024"
  
  # Performance Tuning
  WORKER_COUNT: "4"
  MAX_CONNECTIONS: "1000"
  REQUEST_TIMEOUT: "30"
  
  # Feature Flags
  ENABLE_VOICE_PROCESSING: "true"
  ENABLE_PLUGIN_SYSTEM: "true"
  ENABLE_MOBILE_API: "true"
  ENABLE_REAL_TIME_AUDIO: "true"
  
  # Scaling Configuration
  AUTO_SCALING_ENABLED: "true"
  MIN_REPLICAS: "2"
  MAX_REPLICAS: "20"
  TARGET_CPU_UTILIZATION: "70"
  TARGET_MEMORY_UTILIZATION: "80"
  
  # Distributed Processing
  ENABLE_DISTRIBUTED_PROCESSING: "true"
  CELERY_BROKER_URL: "redis://jarvis-redis:6379/1"
  CELERY_RESULT_BACKEND: "redis://jarvis-redis:6379/2"
  
  # Load Balancing
  LOAD_BALANCER_TYPE: "round_robin"
  STICKY_SESSIONS: "false"
  
  # Security
  ENABLE_RATE_LIMITING: "true"
  RATE_LIMIT_REQUESTS: "1000"
  RATE_LIMIT_WINDOW: "60"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: jarvis-v2
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        
        # Performance optimizations
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10m;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/rss+xml
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/x-web-app-manifest+json
            application/xhtml+xml
            application/xml
            font/opentype
            image/svg+xml
            image/x-icon
            text/css
            text/plain
            text/x-component;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
        limit_req_zone $binary_remote_addr zone=websocket:10m rate=10r/s;
        
        # Connection pooling
        upstream jarvis_core {
            least_conn;
            server jarvis-core:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        upstream jarvis_audio {
            least_conn;
            server jarvis-audio:8001 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        upstream jarvis_mobile {
            least_conn;
            server jarvis-mobile:8002 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        upstream jarvis_web {
            least_conn;
            server jarvis-web:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        # WebSocket upgrade
        map $http_upgrade $connection_upgrade {
            default upgrade;
            '' close;
        }
        
        # Main server block
        server {
            listen 80;
            server_name _;
            
            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Web interface
            location / {
                proxy_pass http://jarvis_web;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            # Core API
            location /api/v2/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://jarvis_core;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_timeout 30s;
                proxy_connect_timeout 5s;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            }
            
            # Audio API
            location /api/v2/audio/ {
                proxy_pass http://jarvis_audio;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_timeout 60s;
                proxy_connect_timeout 10s;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            }
            
            # Mobile API
            location /api/v2/mobile/ {
                proxy_pass http://jarvis_mobile;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_timeout 30s;
                proxy_connect_timeout 5s;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            }
            
            # WebSocket endpoints
            location /ws/ {
                limit_req zone=websocket burst=10 nodelay;
                proxy_pass http://jarvis_core;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 3600s;
                proxy_send_timeout 3600s;
            }
            
            # Audio WebSocket
            location /ws/audio/ {
                proxy_pass http://jarvis_audio;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 3600s;
                proxy_send_timeout 3600s;
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: jarvis-v2
data:
  redis.conf: |
    # Redis configuration for Jarvis v2.0
    bind 0.0.0.0
    port 6379
    
    # Performance tuning
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Logging
    loglevel notice
    logfile ""
    
    # Security
    protected-mode no
    
    # Networking
    tcp-keepalive 300
    timeout 0
    
    # Clients
    maxclients 10000
    
    # Cluster configuration
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000