apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jarvis-redis
  namespace: jarvis-v2
  labels:
    app: jarvis-redis
    version: "2.0"
    component: cache
spec:
  serviceName: jarvis-redis
  replicas: 3
  selector:
    matchLabels:
      app: jarvis-redis
  template:
    metadata:
      labels:
        app: jarvis-redis
        version: "2.0"
        component: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - jarvis-redis
              topologyKey: kubernetes.io/hostname
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        - containerPort: 16379
          name: cluster-bus
        command:
        - redis-server
        - /etc/redis/redis.conf
        - --cluster-enabled
        - "yes"
        - --cluster-config-file
        - /data/nodes.conf
        - --cluster-node-timeout
        - "5000"
        - --appendonly
        - "yes"
        - --protected-mode
        - "no"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: jarvis-secrets
              key: redis-password
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis://localhost:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: jarvis-secrets
              key: redis-password
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      nodeSelector:
        node-type: memory-optimized
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "memory-optimized"
        effect: "NoSchedule"
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jarvis-redis
  namespace: jarvis-v2
  labels:
    app: jarvis-redis
    version: "2.0"
    component: cache
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: jarvis-redis
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  - port: 16379
    targetPort: 16379
    name: cluster-bus
---
apiVersion: v1
kind: Service
metadata:
  name: jarvis-redis-service
  namespace: jarvis-v2
  labels:
    app: jarvis-redis
    version: "2.0"
    component: cache
spec:
  type: ClusterIP
  selector:
    app: jarvis-redis
  ports:
  - port: 6379
    targetPort: 6379
    name: redis