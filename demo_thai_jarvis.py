#!/usr/bin/env python3
"""
JARVIS Thai Language Demo
‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏£‡∏∞‡∏ö‡∏ö JARVIS ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
"""

import sys
import json
from pathlib import Path

# Add src to path
sys.path.insert(0, str(Path(__file__).parent / "src"))

def jarvis_thai_demo():
    """Demo JARVIS Thai interaction"""
    print("ü§ñ JARVIS Thai Language Assistant Demo")
    print("ü§ñ ‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ JARVIS ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢")
    print("=" * 50)
    
    try:
        from voice.command_parser import VoiceCommandParser
        from features.thai_language_enhanced import ThaiLanguageProcessor
        
        config = {
            "command_parser": {"enabled": True},
            "thai_language": {"enabled": True}
        }
        
        command_parser = VoiceCommandParser(config)
        thai_processor = ThaiLanguageProcessor(config)
        
        print("‚úÖ JARVIS ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö!")
        print()
        
        # Your Thai command
        user_input = "‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏ô‡πà‡∏≠‡∏¢"
        
        print(f"üë§ User: {user_input}")
        print()
        
        # Process Thai language
        thai_result = thai_processor.process_thai_text(user_input)
        enhanced = thai_processor.enhance_for_ai_processing(user_input)
        
        print("üîç Thai Language Analysis:")
        print(f"   üìù Processed: {thai_result.processed_text}")
        print(f"   üåè Language: {thai_result.language}")
        print(f"   üé≠ Cultural: {thai_result.cultural_context or 'neutral'}")
        
        # Parse command
        parsed = command_parser.parse_command(user_input, "th")
        
        print("üéØ Command Analysis:")
        print(f"   üí≠ Intent: {parsed.intent}")
        print(f"   üìä Confidence: {parsed.confidence:.2f}")
        if parsed.entities:
            print(f"   üìã Entities: {parsed.entities}")
        
        # Enhanced AI context
        if enhanced.get("ai_prompt_enhancement"):
            print("ü§ñ AI Enhancement:")
            print(f"   {enhanced['ai_prompt_enhancement']}")
        
        # Generate response based on intent
        print()
        print("ü§ñ JARVIS Response:")
        
        if "‡∏ó‡∏î‡∏™‡∏≠‡∏ö" in user_input or "test" in user_input.lower():
            response = """
            ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏ú‡∏°‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì
            
            üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö:
            ‚úÖ ‡∏Å‡∏≤‡∏£‡∏£‡∏π‡πâ‡∏à‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ - ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ 100%
            ‚úÖ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏ó‡∏≤‡∏á‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏° - ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ
            ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ - ‡∏à‡∏î‡∏à‡∏≥‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡πÑ‡∏î‡πâ
            ‚úÖ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ - ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÄ‡∏à‡∏ï‡∏ô‡∏≤‡πÑ‡∏î‡πâ
            
            ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏≠‡∏á‡∏û‡∏π‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏ô:
            üó£Ô∏è "‡∏à‡∏≤‡∏£‡πå‡∏ß‡∏¥‡∏™ ‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£"
            üó£Ô∏è "‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö machine learning"
            üó£Ô∏è "‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ‡∏î‡∏±‡∏á‡∏Ç‡∏∂‡πâ‡∏ô"
            üó£Ô∏è "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö"
            
            ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö! üöÄ
            """
        else:
            response = f"‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏à‡∏∞{parsed.intent} ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Ç‡∏≠"
        
        print(response)
        
        # Show available features
        print("\nüåü JARVIS Advanced Features:")
        print("   üé§ Wake Word Detection - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö '‡πÄ‡∏Æ‡πâ ‡∏à‡∏≤‡∏£‡πå‡∏ß‡∏¥‡∏™', '‡∏à‡∏≤‡∏£‡πå‡∏ß‡∏¥‡∏™'")
        print("   üáπüá≠ Thai Language Support - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏ó‡∏≤‡∏á‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°")
        print("   üß† Conversation Memory - ‡∏à‡∏≥‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤")
        print("   üéØ Intent Recognition - ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÄ‡∏à‡∏ï‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£")
        print("   ü§ñ AI Enhancement - ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö DeepSeek-R1")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï JARVIS...")
    print()
    
    if jarvis_thai_demo():
        print("\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
        print("\nüí° Tips: ‡∏£‡∏∞‡∏ö‡∏ö JARVIS ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
        print("   - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©")
        print("   - ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏ó‡∏≤‡∏á‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°")
        print("   - ‡∏à‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÑ‡∏î‡πâ")
        print("   - ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î")
    else:
        print("\n‚ùå ‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")