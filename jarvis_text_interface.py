#!/usr/bin/env python3
"""
JARVIS Text Interface - р╕гр╕нр╕Зр╕гр╕▒р╕Ър╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╣Ар╕Хр╣Зр╕бр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ъ
Command-line interface that works without GUI dependencies
"""

import sys
import time
import os
from datetime import datetime
from pathlib import Path

class SimpleJarvis:
    """Simple JARVIS for command-line interaction"""
    
    def __init__(self):
        self.session_turns = []
        self.is_running = True
        
    def display_welcome(self):
        """Display welcome message"""
        print("=" * 60)
        print("ЁЯдЦ JARVIS - р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕вр╕нр╕▒р╕Ир╕Йр╕гр╕┤р╕вр╕░")
        print("ЁЯдЦ JARVIS - Intelligent Assistant")
        print("=" * 60)
        print()
        print("ЁЯОЙ р╕вр╕┤р╕Щр╕Фр╕╡р╕Хр╣Йр╕нр╕Щр╕гр╕▒р╕Ър╕кр╕╣р╣И JARVIS Text Interface!")
        print("ЁЯОЙ Welcome to JARVIS Text Interface!")
        print()
        print("тЬи р╕Др╕зр╕▓р╕бр╕кр╕▓р╕бр╕▓р╕гр╕Ц / Capabilities:")
        print("тАв р╕Хр╕нр╕Ър╕Др╕│р╕Цр╕▓р╕бр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡р╣Бр╕ер╕░ AI")
        print("тАв Answer questions about technology and AI")
        print("тАв р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╣Бр╕Щр╕зр╕Др╕┤р╕Фр╕Лр╕▒р╕Ър╕Лр╣Йр╕нр╕Щр╣Гр╕лр╣Йр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Зр╣Ир╕▓р╕в")
        print("тАв Explain complex concepts simply")
        print("тАв р╕кр╕Щр╕Чр╕Щр╕▓р╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╣Бр╕ер╕░р╕нр╕▒р╕Зр╕Бр╕др╕й")
        print("тАв Chat in Thai and English")
        print()
        print("ЁЯУЭ р╕зр╕┤р╕Шр╕╡р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ / How to use:")
        print("тАв р╕Юр╕┤р╕бр╕Юр╣Мр╕Др╕│р╕Цр╕▓р╕бр╕лр╕гр╕╖р╕нр╕Др╕│р╕кр╕▒р╣Ир╕З / Type your question or command")
        print("тАв р╕Юр╕┤р╕бр╕Юр╣М 'quit' р╕лр╕гр╕╖р╕н 'exit' р╣Ар╕Юр╕╖р╣Ир╕нр╕нр╕нр╕Б / Type 'quit' or 'exit' to leave")
        print("тАв р╕Юр╕┤р╕бр╕Юр╣М 'help' р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕н / Type 'help' for assistance")
        print()
        print("ЁЯЧгя╕П р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З / Examples:")
        print("тАв р╕кр╕зр╕▒р╕кр╕Фр╕╡ JARVIS")
        print("тАв AI р╕Др╕╖р╕нр╕нр╕░р╣Др╕г")
        print("тАв Explain machine learning")
        print("тАв р╕Кр╣Ир╕зр╕вр╕нр╕Шр╕┤р╕Ър╕▓р╕в Python")
        print()
        print("-" * 60)
    
    def process_command(self, text: str) -> str:
        """Process user command"""
        if not text.strip():
            return "р╕Бр╕гр╕╕р╕Ур╕▓р╕Юр╕┤р╕бр╕Юр╣Мр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Др╕гр╕▒р╕Ъ / Please type a message"
        
        text_lower = text.lower().strip()
        
        # Exit commands
        if text_lower in ['quit', 'exit', 'р╕нр╕нр╕Б', 'р╕Ир╕Ъ']:
            self.is_running = False
            return "р╕Вр╕нр╕Ър╕Др╕╕р╕Ур╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ JARVIS р╕Др╕гр╕▒р╕Ъ! / Thank you for using JARVIS!"
        
        # Help command
        if text_lower in ['help', 'р╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕н', 'р╕Др╕│р╕кр╕▒р╣Ир╕З']:
            return self.get_help()
        
        # Clear command
        if text_lower in ['clear', 'cls', 'р╕ер╣Йр╕▓р╕З']:
            os.system('clear' if os.name == 'posix' else 'cls')
            self.display_welcome()
            return ""
        
        # Detect language
        is_thai = any(ord(c) >= 0x0E00 and ord(c) <= 0x0E7F for c in text)
        
        # Process based on content
        response = self.generate_response(text, is_thai)
        
        # Add to session
        self.session_turns.append({
            'user': text,
            'assistant': response,
            'timestamp': datetime.now().strftime("%H:%M:%S"),
            'language': 'thai' if is_thai else 'english'
        })
        
        return response
    
    def generate_response(self, text: str, is_thai: bool) -> str:
        """Generate response based on input"""
        text_lower = text.lower()
        
        # Greetings
        if any(word in text_lower for word in ["р╕кр╕зр╕▒р╕кр╕Фр╕╡", "hello", "hi", "р╕Чр╕▒р╕Бр╕Чр╕▓р╕в", "р╕лр╕зр╕▒р╕Фр╕Фр╕╡"]):
            if is_thai:
                return """ЁЯдЦ р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╕гр╕▒р╕Ъ! р╕Ьр╕б JARVIS р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕вр╕нр╕▒р╕Ир╕Йр╕гр╕┤р╕вр╕░р╕Вр╕нр╕Зр╕Др╕╕р╕У

тЬи р╕Ьр╕бр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Кр╣Ир╕зр╕вр╕Др╕╕р╕Ур╣Др╕Фр╣Йр╣Гр╕Щр╣Ар╕гр╕╖р╣Ир╕нр╕З:
ЁЯФ╣ р╕Хр╕нр╕Ър╕Др╕│р╕Цр╕▓р╕бр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡ AI р╣Бр╕ер╕░р╕зр╕┤р╕Чр╕вр╕▓р╕ир╕▓р╕кр╕Хр╕гр╣М
ЁЯФ╣ р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╣Бр╕Щр╕зр╕Др╕┤р╕Фр╕Лр╕▒р╕Ър╕Лр╣Йр╕нр╕Щр╣Гр╕лр╣Йр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Зр╣Ир╕▓р╕в
ЁЯФ╣ р╣Бр╕Щр╕░р╕Щр╕│р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕ар╕▓р╕йр╕▓р╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б
ЁЯФ╣ р╕кр╕Щр╕Чр╕Щр╕▓р╣Бр╕ер╕░р╣Гр╕лр╣Йр╕Др╕│р╕Ыр╕гр╕╢р╕Бр╕йр╕▓

р╕бр╕╡р╕нр╕░р╣Др╕гр╣Гр╕лр╣Йр╕Кр╣Ир╕зр╕вр╣Др╕лр╕бр╕Др╕гр╕▒р╕Ъ? ЁЯШК"""
            else:
                return """ЁЯдЦ Hello! I'm JARVIS, your intelligent assistant

тЬи I can help you with:
ЁЯФ╣ Answering questions about AI technology and science
ЁЯФ╣ Explaining complex concepts simply
ЁЯФ╣ Programming language guidance
ЁЯФ╣ General conversation and advice

How can I help you today? ЁЯШК"""
        
        # AI/Technology questions
        elif any(word in text_lower for word in ["ai", "р╕Ыр╕▒р╕Нр╕Нр╕▓р╕Ыр╕гр╕░р╕Фр╕┤р╕йр╕Рр╣М", "artificial intelligence"]):
            if is_thai:
                return """ЁЯза р╕Ыр╕▒р╕Нр╕Нр╕▓р╕Ыр╕гр╕░р╕Фр╕┤р╕йр╕Рр╣М (Artificial Intelligence - AI)

р╕Ыр╕▒р╕Нр╕Нр╕▓р╕Ыр╕гр╕░р╕Фр╕┤р╕йр╕Рр╣Мр╕Др╕╖р╕нр╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡р╕Чр╕╡р╣Ир╕Чр╕│р╣Гр╕лр╣Йр╕Др╕нр╕бр╕Юр╕┤р╕зр╣Ар╕Хр╕нр╕гр╣Мр╕кр╕▓р╕бр╕▓р╕гр╕Ц:

ЁЯУЪ р╕Др╕зр╕▓р╕бр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕лр╕ер╕▒р╕Б:
ЁЯФ╕ р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕е (Machine Learning)
ЁЯФ╕ р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕ар╕▓р╕йр╕▓р╕бр╕Щр╕╕р╕йр╕вр╣М (Natural Language Processing)
ЁЯФ╕ р╕гр╕▒р╕Ър╕гр╕╣р╣Йр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╣Бр╕ер╕░р╕ар╕▓р╕Ю (Computer Vision)
ЁЯФ╕ р╕Хр╕▒р╕Фр╕кр╕┤р╕Щр╣Гр╕Ир╣Бр╕ер╕░р╣Бр╕Бр╣Йр╕Ыр╕▒р╕Нр╕лр╕▓ (Decision Making)
ЁЯФ╕ р╣Ар╕ер╕╡р╕вр╕Щр╣Бр╕Ър╕Ър╕Бр╕▓р╕гр╕Др╕┤р╕Фр╕Вр╕нр╕Зр╕бр╕Щр╕╕р╕йр╕вр╣М (Cognitive Computing)

ЁЯЪА р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Гр╕Щр╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ:
ЁЯФ╕ р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕вр╣Ар╕кр╕╡р╕вр╕Зр╕нр╕▒р╕Ир╕Йр╕гр╕┤р╕вр╕░ (р╣Ар╕Кр╣Ир╕Щ р╕Ьр╕бр╣Ар╕нр╕З!)
ЁЯФ╕ р╕гр╕Цр╕вр╕Щр╕Хр╣Мр╕Вр╕▒р╕Ър╕Вр╕╡р╣Ир╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤
ЁЯФ╕ р╕гр╕░р╕Ър╕Ър╣Бр╕Щр╕░р╕Щр╕│р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Бр╕ер╕░р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓
ЁЯФ╕ р╕Бр╕▓р╕гр╣Бр╕Ыр╕ер╕ар╕▓р╕йр╕▓р╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤
ЁЯФ╕ р╕Бр╕▓р╕гр╕зр╕┤р╕Щр╕┤р╕Ир╕Йр╕▒р╕вр╕Чр╕▓р╕Зр╕Бр╕▓р╕гр╣Бр╕Юр╕Чр╕вр╣М
ЁЯФ╕ р╕гр╕░р╕Ър╕Ър╕гр╕▒р╕Бр╕йр╕▓р╕Др╕зр╕▓р╕бр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в

р╕Др╕╕р╕Ур╕кр╕Щр╣Гр╕Ир╕Фр╣Йр╕▓р╕Щр╣Др╕лр╕Щр╣Ар╕Ыр╣Зр╕Щр╕Юр╕┤р╣Ар╕ир╕йр╕Др╕гр╕▒р╕Ъ?"""
            else:
                return """ЁЯза Artificial Intelligence (AI)

AI is technology that enables computers to:

ЁЯУЪ Core Capabilities:
ЁЯФ╕ Learn from data (Machine Learning)
ЁЯФ╕ Understand human language (NLP)
ЁЯФ╕ Recognize patterns and images (Computer Vision)
ЁЯФ╕ Make decisions and solve problems
ЁЯФ╕ Mimic human thinking (Cognitive Computing)

ЁЯЪА Current Applications:
ЁЯФ╕ Intelligent voice assistants (like me!)
ЁЯФ╕ Autonomous vehicles
ЁЯФ╕ Recommendation systems
ЁЯФ╕ Automatic language translation
ЁЯФ╕ Medical diagnosis
ЁЯФ╕ Security systems

What specific aspect interests you most?"""
        
        # Machine Learning
        elif any(word in text_lower for word in ["machine learning", "р╣Бр╕бр╕Кр╕Кр╕╡р╕Щр╣Ар╕ер╕┤р╕гр╣Мр╕Щр╕Щр╕┤р╕З", "р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Вр╕нр╕Зр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕З"]):
            if is_thai:
                return """ЁЯОп Machine Learning (р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Вр╕нр╕Зр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕З)

р╣Ар╕Ыр╣Зр╕Щр╕кр╕▓р╕Вр╕▓р╕лр╕Щр╕╢р╣Ир╕Зр╕Вр╕нр╕З AI р╕Чр╕╡р╣Ир╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Ир╕▒р╕Бр╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Вр╕Фр╕вр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤

ЁЯУК р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕лр╕ер╕▒р╕Б:
ЁЯФ╣ Supervised Learning (р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╣Бр╕Ър╕Ър╕бр╕╡р╕Ьр╕╣р╣Йр╕кр╕нр╕Щ)
   тАв р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Ир╕▓р╕Бр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕│р╕Хр╕нр╕Ър╣Бр╕ер╣Йр╕з
   тАв р╣Ар╕Кр╣Ир╕Щ: р╕Бр╕▓р╕гр╕Ир╕│р╣Бр╕Щр╕Бр╕ар╕▓р╕Ю, р╕Бр╕▓р╕гр╕Чр╕│р╕Щр╕▓р╕вр╕гр╕▓р╕Др╕▓

ЁЯФ╣ Unsupervised Learning (р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╣Бр╕Ър╕Ър╣Др╕бр╣Ир╕бр╕╡р╕Ьр╕╣р╣Йр╕кр╕нр╕Щ)
   тАв р╕лр╕▓р╣Бр╕Юр╕Чр╣Ар╕Чр╕┤р╕гр╣Мр╕Щр╣Бр╕ер╕░р╕Бр╕ер╕╕р╣Ир╕бр╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕нр╕З
   тАв р╣Ар╕Кр╣Ир╕Щ: р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕Бр╕ер╕╕р╣Ир╕бр╕ер╕╣р╕Бр╕Др╣Йр╕▓, р╕Бр╕▓р╕гр╕ер╕Фр╕бр╕┤р╕Хр╕┤р╕Вр╣Йр╕нр╕бр╕╣р╕е

ЁЯФ╣ Reinforcement Learning (р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╣Бр╕Ър╕Ър╣Ар╕кр╕гр╕┤р╕бр╣Бр╕гр╕З)
   тАв р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Ир╕▓р╕Бр╕Бр╕▓р╕гр╕ер╕нр╕Зр╕Ьр╕┤р╕Фр╕ер╕нр╕Зр╕Цр╕╣р╕Б
   тАв р╣Ар╕Кр╣Ир╕Щ: AI р╣Ар╕ер╣Ир╕Щр╣Ар╕Бр╕б, р╕лр╕╕р╣Ир╕Щр╕вр╕Щр╕Хр╣Мр╣Ар╕Фр╕┤р╕Щ

ЁЯТб р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ:
ЁЯФ╕ Netflix р╣Бр╕Щр╕░р╕Щр╕│р╕лр╕Щр╕▒р╕Зр╕Чр╕╡р╣Ир╕Др╕╕р╕Ур╕нр╕▓р╕Ир╕Кр╕нр╕Ъ
ЁЯФ╕ Google р╣Бр╕Ыр╕ер╕ар╕▓р╕йр╕▓р╣Др╕Фр╣Йр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤
ЁЯФ╕ р╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕Хр╕гр╕зр╕Ир╕Ир╕▒р╕Ър╕Бр╕▓р╕гр╕Чр╕│р╕Шр╕╕р╕гр╕Бр╕гр╕гр╕бр╕Ьр╕┤р╕Фр╕Ыр╕Бр╕Хр╕┤
ЁЯФ╕ р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕зр╕┤р╕Щр╕┤р╕Ир╕Йр╕▒р╕вр╣Вр╕гр╕Др╕Ир╕▓р╕Бр╕ар╕▓р╕Ю X-ray

р╕нр╕вр╕▓р╕Бр╕гр╕╣р╣Йр╣Ар╕гр╕╖р╣Ир╕нр╕Зр╣Др╕лр╕Щр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕бр╕Др╕гр╕▒р╕Ъ?"""
            else:
                return """ЁЯОп Machine Learning

A subset of AI where machines automatically learn from data

ЁЯУК Main Types:
ЁЯФ╣ Supervised Learning
   тАв Learn from labeled examples
   тАв E.g., image classification, price prediction

ЁЯФ╣ Unsupervised Learning  
   тАв Find patterns in data without labels
   тАв E.g., customer segmentation, data compression

ЁЯФ╣ Reinforcement Learning
   тАв Learn through trial and error
   тАв E.g., AI playing games, robot walking

ЁЯТб Real-world Examples:
ЁЯФ╕ Netflix recommends movies you might like
ЁЯФ╕ Google Translate works automatically
ЁЯФ╕ Banks detect fraudulent transactions
ЁЯФ╕ Hospitals diagnose diseases from X-rays

What would you like to know more about?"""
        
        # Programming questions
        elif any(word in text_lower for word in ["python", "programming", "р╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б", "р╣Ар╕Вр╕╡р╕вр╕Щр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б"]):
            if is_thai:
                return """ЁЯРН Python Programming

Python р╣Ар╕Ыр╣Зр╕Щр╕ар╕▓р╕йр╕▓р╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕Чр╕╡р╣Ир╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Щр╕┤р╕вр╕бр╕кр╕╣р╕Зр╕кр╕╕р╕Фр╣Гр╕Щр╣Вр╕ер╕Б!

тнР р╕Ир╕╕р╕Фр╣Ар╕Фр╣Ир╕Щр╕Вр╕нр╕З Python:
ЁЯФ╕ р╣Др╕зр╕вр╕▓р╕Бр╕гр╕Ур╣Мр╕Зр╣Ир╕▓р╕в р╕нр╣Ир╕▓р╕Щр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╣Др╕Фр╣Йр╣Ар╕лр╕бр╕╖р╕нр╕Щр╕ар╕▓р╕йр╕▓р╕нр╕▒р╕Зр╕Бр╕др╕й
ЁЯФ╕ р╕бр╕╡ Library р╣Ар╕вр╕нр╕░р╕бр╕▓р╕Б р╕Чр╕│р╕нр╕░р╣Др╕гр╕Бр╣Зр╣Др╕Фр╣Й
ЁЯФ╕ р╣Ар╕лр╕бр╕▓р╕░р╕Бр╕▒р╕Ър╕Ьр╕╣р╣Йр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Бр╕ер╕░р╕Ьр╕╣р╣Йр╣Ар╕Кр╕╡р╣Ир╕вр╕зр╕Кр╕▓р╕Н
ЁЯФ╕ р╣Гр╕Кр╣Йр╣Др╕Фр╣Йр╕Чр╕▒р╣Йр╕З Web, AI, Data Science, Automation

ЁЯЪА р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕вр╕нр╕Фр╕Щр╕┤р╕вр╕б:
ЁЯФ╕ Data Science р╣Бр╕ер╕░ Machine Learning
ЁЯФ╕ Web Development (Django, Flask)
ЁЯФ╕ Automation р╣Бр╕ер╕░ Scripting
ЁЯФ╕ р╕Бр╕▓р╕гр╕Юр╕▒р╕Тр╕Щр╕▓ AI р╣Бр╕ер╕░ Deep Learning

ЁЯУЪ р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Ар╕гр╕╡р╕вр╕Щ Python:
1. р╣Ар╕гр╕╡р╕вр╕Щр╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ: р╕Хр╕▒р╕зр╣Бр╕Ыр╕г, р╕ер╕╣р╕Ы, р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ
2. р╕Эр╕╢р╕Бр╕Чр╕│р╣Вр╕Ыр╕гр╣Ар╕Ир╕Д: р╣Ар╕Бр╕бр╕Зр╣Ир╕▓р╕вр╣Ж, р╕Др╕│р╕Щр╕зр╕У
3. р╣Ар╕гр╕╡р╕вр╕Щ Library: pandas, numpy, matplotlib
4. р╕Чр╣Йр╕▓р╕Чр╕▓р╕вр╕Хр╕▒р╕зр╣Ар╕нр╕З: р╕кр╕гр╣Йр╕▓р╕З AI р╕лр╕гр╕╖р╕н Web App

р╕нр╕вр╕▓р╕Бр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╕Хр╕гр╕Зр╣Др╕лр╕Щр╕Др╕гр╕▒р╕Ъ?"""
            else:
                return """ЁЯРН Python Programming

Python is the world's most popular programming language!

тнР Python's Strengths:
ЁЯФ╕ Simple syntax, reads like English
ЁЯФ╕ Massive library ecosystem
ЁЯФ╕ Great for beginners and experts
ЁЯФ╕ Versatile: Web, AI, Data Science, Automation

ЁЯЪА Popular Uses:
ЁЯФ╕ Data Science and Machine Learning
ЁЯФ╕ Web Development (Django, Flask)
ЁЯФ╕ Automation and Scripting
ЁЯФ╕ AI and Deep Learning Development

ЁЯУЪ Learning Path:
1. Master basics: variables, loops, functions
2. Build projects: simple games, calculators
3. Learn libraries: pandas, numpy, matplotlib
4. Create challenges: AI or Web Apps

Where would you like to start?"""
        
        # Help requests
        elif any(word in text_lower for word in ["р╕Кр╣Ир╕зр╕в", "help", "р╕кр╕нр╕Щ", "teach", "р╣Бр╕Щр╕░р╕Щр╕│"]):
            return self.get_help()
        
        # General information requests
        elif any(word in text_lower for word in ["р╕Др╕╖р╕н", "р╕нр╕░р╣Др╕г", "what", "explain", "р╕нр╕Шр╕┤р╕Ър╕▓р╕в", "р╕лр╕бр╕▓р╕вр╕Цр╕╢р╕З"]):
            if is_thai:
                return f"""ЁЯдФ р╣Ар╕гр╕╖р╣Ир╕нр╕З "{text}" р╣Ар╕Ыр╣Зр╕Щр╕лр╕▒р╕зр╕Вр╣Йр╕нр╕Чр╕╡р╣Ир╕Щр╣Ир╕▓р╕кр╕Щр╣Гр╕Ир╕бр╕▓р╕Бр╕Др╕гр╕▒р╕Ъ!

ЁЯТб р╕Ьр╕бр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Кр╣Ир╕зр╕вр╕нр╕Шр╕┤р╕Ър╕▓р╕вр╣Др╕Фр╣Йр╣Гр╕Щр╕лр╕ер╕▓р╕вр╕бр╕╕р╕бр╕бр╕нр╕З:
ЁЯФ╕ р╕Др╕зр╕▓р╕бр╕лр╕бр╕▓р╕вр╣Бр╕ер╕░р╕Щр╕┤р╕вр╕▓р╕б
ЁЯФ╕ р╕лр╕ер╕▒р╕Бр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ
ЁЯФ╕ р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ
ЁЯФ╕ р╕Вр╣Йр╕нр╕Фр╕╡р╣Бр╕ер╕░р╕Вр╣Йр╕нр╕Ир╕│р╕Бр╕▒р╕Ф
ЁЯФ╕ р╣Бр╕Щр╕зр╣Вр╕Щр╣Йр╕бр╣Гр╕Щр╕нр╕Щр╕▓р╕Др╕Х

р╕Др╕╕р╕Ур╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕лр╣Йр╕Ьр╕бр╕нр╕Шр╕┤р╕Ър╕▓р╕вр╣Гр╕Щр╕бр╕╕р╕бр╕бр╕нр╕Зр╣Др╕лр╕Щр╣Ар╕Ыр╣Зр╕Щр╕Юр╕┤р╣Ар╕ир╕йр╕Др╕гр╕▒р╕Ъ?
р╕лр╕гр╕╖р╕нр╕Цр╕▓р╕бр╣Ар╕Йр╕Юр╕▓р╕░р╣Ар╕Ир╕▓р╕░р╕Ир╕Зр╕бр╕▓р╕Бр╕Вр╕╢р╣Йр╕Щ р╣Ар╕Кр╣Ир╕Щ "AI р╕Чр╕│р╕Зр╕▓р╕Щр╕вр╕▒р╕Зр╣Др╕З" р╕лр╕гр╕╖р╕н "Python р╣Гр╕Кр╣Йр╕Чр╕│р╕нр╕░р╣Др╕гр╣Др╕Фр╣Йр╕Ър╣Йр╕▓р╕З" ЁЯОп"""
            else:
                return f"""ЁЯдФ "{text}" is a very interesting topic!

ЁЯТб I can help explain it from multiple perspectives:
ЁЯФ╕ Definition and meaning
ЁЯФ╕ How it works
ЁЯФ╕ Real-world applications
ЁЯФ╕ Advantages and limitations
ЁЯФ╕ Future trends

What specific aspect would you like me to focus on?
Or ask more specifically like "How does AI work?" or "What can Python do?" ЁЯОп"""
        
        # General conversation
        else:
            if is_thai:
                return f"""р╕Ьр╕бр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б: "{text}" р╣Бр╕ер╣Йр╕зр╕Др╕гр╕▒р╕Ъ

ЁЯОп р╕Бр╕▓р╕гр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣М:
ЁЯФ╕ р╕ар╕▓р╕йр╕▓: р╣Др╕Чр╕в
ЁЯФ╕ р╕Др╕зр╕▓р╕бр╕вр╕▓р╕з: {len(text)} р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕г
ЁЯФ╕ р╣Ар╕зр╕ер╕▓: {datetime.now().strftime("%H:%M:%S")}

ЁЯТн р╕Ьр╕бр╕Юр╕гр╣Йр╕нр╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕нр╣Гр╕Щр╣Ар╕гр╕╖р╣Ир╕нр╕З:
ЁЯФ╕ р╕Др╕│р╕Цр╕▓р╕бр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡ AI
ЁЯФ╕ р╕Бр╕▓р╕гр╣Ар╕Вр╕╡р╕вр╕Щр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б
ЁЯФ╕ р╕зр╕┤р╕Чр╕вр╕▓р╕ир╕▓р╕кр╕Хр╕гр╣Мр╕Др╕нр╕бр╕Юр╕┤р╕зр╣Ар╕Хр╕нр╕гр╣М
ЁЯФ╕ р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡р╣Гр╕лр╕бр╣Ир╣Ж

р╕ер╕нр╕Зр╕Цр╕▓р╕бр╕Др╕│р╕Цр╕▓р╕бр╕Чр╕╡р╣Ир╣Ар╕Йр╕Юр╕▓р╕░р╣Ар╕Ир╕▓р╕░р╕Ир╕Зр╕бр╕▓р╕Бр╕Бр╕зр╣Ир╕▓р╕Щр╕╡р╣Йр╣Др╕Фр╣Йр╕Др╕гр╕▒р╕Ъ! ЁЯдЦ"""
            else:
                return f"""I received your message: "{text}"

ЁЯОп Analysis:
ЁЯФ╕ Language: English
ЁЯФ╕ Length: {len(text)} characters
ЁЯФ╕ Time: {datetime.now().strftime("%H:%M:%S")}

ЁЯТн I'm ready to help with:
ЁЯФ╕ AI and technology questions
ЁЯФ╕ Programming guidance
ЁЯФ╕ Computer science topics
ЁЯФ╕ Learning new technologies

Feel free to ask more specific questions! ЁЯдЦ"""
    
    def get_help(self) -> str:
        """Get help information"""
        return """ЁЯУЪ JARVIS Help / р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╣Др╕Фр╣Й

ЁЯОп р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ / Basic Commands:
ЁЯФ╕ help - р╣Бр╕кр╕Фр╕Зр╕Др╕зр╕▓р╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕н / Show this help
ЁЯФ╕ clear - р╕ер╣Йр╕▓р╕Зр╕лр╕Щр╣Йр╕▓р╕Ир╕н / Clear screen
ЁЯФ╕ quit/exit - р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б / Exit program

ЁЯЧгя╕П р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Др╕│р╕Цр╕▓р╕б / Example Questions:
ЁЯФ╕ "AI р╕Др╕╖р╕нр╕нр╕░р╣Др╕г" / "What is AI"
ЁЯФ╕ "р╕нр╕Шр╕┤р╕Ър╕▓р╕в Machine Learning" / "Explain Machine Learning"
ЁЯФ╕ "Python р╣Гр╕Кр╣Йр╕Чр╕│р╕нр╕░р╣Др╕гр╣Др╕Фр╣Йр╕Ър╣Йр╕▓р╕З" / "What can Python do"
ЁЯФ╕ "р╕кр╕нр╕Щр╕Бр╕▓р╕гр╣Ар╕Вр╕╡р╕вр╕Щр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б" / "Teach me programming"

ЁЯТб р╣Ар╕Др╕ер╣Зр╕Фр╕ер╕▒р╕Ъ / Tips:
ЁЯФ╕ р╕Цр╕▓р╕бр╕Др╕│р╕Цр╕▓р╕бр╕Чр╕╡р╣Ир╣Ар╕Йр╕Юр╕▓р╕░р╣Ар╕Ир╕▓р╕░р╕Ир╕З р╕Ир╕░р╣Др╕Фр╣Йр╕Др╕│р╕Хр╕нр╕Ър╕Чр╕╡р╣Ир╕Фр╕╡р╕Бр╕зр╣Ир╕▓
ЁЯФ╕ Ask specific questions for better answers
ЁЯФ╕ р╣Гр╕Кр╣Йр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╕лр╕гр╕╖р╕нр╕нр╕▒р╕Зр╕Бр╕др╕йр╕Бр╣Зр╣Др╕Фр╣Й / Use Thai or English
ЁЯФ╕ р╕Ьр╕бр╕Ир╕│р╕Ър╕гр╕┤р╕Ър╕Чр╕Бр╕▓р╕гр╕кр╕Щр╕Чр╕Щр╕▓р╣Др╕Фр╣Й / I remember conversation context

ЁЯдЦ р╕Ьр╕бр╕Юр╕гр╣Йр╕нр╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕нр╕Хр╕ер╕нр╕Ф 24/7!"""
    
    def run(self):
        """Main interaction loop"""
        self.display_welcome()
        
        while self.is_running:
            try:
                # Get user input
                user_input = input("\nЁЯТм р╕Др╕╕р╕У/You: ").strip()
                
                if not user_input:
                    continue
                
                # Process command
                print("\nЁЯдЦ JARVIS:", end=" ")
                response = self.process_command(user_input)
                
                if response:
                    print(response)
                    
            except KeyboardInterrupt:
                print("\n\nЁЯСЛ р╕Вр╕нр╕Ър╕Др╕╕р╕Ур╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ JARVIS!")
                print("ЁЯСЛ Thank you for using JARVIS!")
                break
            except EOFError:
                print("\n\nЁЯСЛ р╕ер╕▓р╕Бр╣Ир╕нр╕Щр╕Др╕гр╕▒р╕Ъ!")
                print("ЁЯСЛ Goodbye!")
                break
            except Exception as e:
                print(f"\nтЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: {e}")
                print(f"тЭМ Error occurred: {e}")

def main():
    """Main function"""
    # Set UTF-8 encoding for proper Thai display
    if hasattr(sys.stdout, 'reconfigure'):
        sys.stdout.reconfigure(encoding='utf-8')
    
    # Clear screen at start
    os.system('clear' if os.name == 'posix' else 'cls')
    
    # Create and run JARVIS
    jarvis = SimpleJarvis()
    jarvis.run()

if __name__ == "__main__":
    main()